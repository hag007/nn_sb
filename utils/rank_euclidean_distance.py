import os
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import constants
import scipy

size=355
distances=[]
real=[3, 10, 10, 10, 12, 14, 14, 14, 21, 25, 29, 32, 36, 37, 48.5, 51, 53, 59, 64, 72.5, 72.5, 78, 95.5, 95.5, 97, 100, 105.5, 105.5, 112.5, 112.5, 112.5, 116, 118.5, 118.5, 124.5, 145.5, 145.5, 148.5, 148.5, 150, 155, 157.5, 157.5, 162, 163, 165.5, 173.5, 177, 182, 185, 188, 191.5, 191.5, 193.5, 200.5, 204.5, 226.5, 231, 233, 234.5, 234.5, 249.5, 249.5, 251.5, 254, 261, 261, 261, 269, 269, 269, 269, 269, 269, 269, 276, 284, 284, 286, 296, 307, 314.5, 320, 327.5, 327.5, 84, 230, 109, 33, 317.5, 103, 45, 221, 241, 135, 172, 117, 141, 91.5, 91.5, 34.5, 34.5, 39, 112.5, 55, 90, 180.5, 160.5, 165.5, 81, 142, 136, 153.5, 296, 296, 255.5, 133, 219, 291, 128.5, 202, 169, 281, 317.5, 222, 206, 317.5, 193.5, 199, 215.5, 215.5, 198, 167.5, 108, 307, 167.5, 257, 311.5, 213, 303, 303, 217, 204.5, 160.5, 164, 120, 278, 239, 22, 98, 274, 324, 313, 42, 102, 253, 203, 138.5, 56, 248, 178, 284, 261, 303, 173.5, 157.5, 280, 153.5, 179, 237, 185, 183, 279, 190, 209, 330, 171, 255.5, 247, 126, 237, 63, 61, 61, 296, 85, 321, 300, 28, 265, 224, 101, 322, 307, 223, 127, 210, 138.5, 138.5, 138.5, 293, 317.5, 296, 288, 251.5, 48.5, 327.5, 143, 211, 151, 41, 290, 110, 311.5, 228.5, 228.5, 128.5, 232, 47, 16, 212, 246, 6, 31, 273, 240, 104, 226.5, 123, 325, 303, 303, 2, 54, 5, 8, 237, 24, 1, 175, 23, 17, 20, 243, 243, 243, 38, 83, 275, 7, 27, 219, 43, 147, 82, 76.5, 197, 71, 30, 134, 4, 61, 18, 19, 121, 170, 89, 51, 51, 180.5, 185, 122, 40, 26, 130, 86, 76.5, 157.5, 93.5, 93.5, 88, 69.5, 69.5, 67, 44, 99, 46, 74, 68, 107, 261, 261, 261, 115, 187, 131, 57.5, 57.5, 299, 79, 80, 189, 124.5, 144, 65, 327.5, 287, 87, 132, 152, 75, 323, 309.5, 309.5, 314.5, 282, 219, 176, 207, 277, 195, 208, 289, 200.5, 196, 292, 214, 225, 245, 66]


for cur in range(10000):
    x=np.arange(size)
    y=np.random.permutation(np.arange(size))
    distances.append(np.mean(np.square(x-y)))

sns.distplot(distances, kde=False)

plt.savefig(os.path.join(constants.OUTPUT_GLOBAL_DIR, "euclidiean_rand_distance.png"))
plt.clf()


x=np.array([226, 78, 173, 110, 54, 40, 256, 88, 272, 114, 26, 128, 41, 61.5, 61.5, 28, 57.5, 57.5, 57.5, 57.5, 64, 15, 67, 134, 69, 135, 177, 224, 166, 25, 34, 188, 7, 141, 274, 3, 63, 20, 246, 60, 185, 156, 53, 129, 117, 42, 18, 217, 265, 51, 6, 12, 251, 178, 37, 240, 196, 48, 223, 33, 10, 107, 8, 49, 245, 215, 97, 96, 2, 50, 94, 94, 94, 122.5, 122.5, 38, 45, 52, 205, 293.5, 293.5, 81, 47, 75, 225, 66, 13.5, 13.5, 65, 171, 171, 171, 176, 21, 27, 115, 291, 220, 103.5, 103.5, 167, 292, 266, 229, 186, 160, 252, 80, 124, 39, 79, 254, 270.5, 270.5, 295, 248, 70, 285, 183, 24, 87, 150, 261, 72, 249.5, 249.5, 259, 259, 259, 19, 159, 30, 247, 184, 297, 155, 202, 23, 106, 157.5, 157.5, 189, 206.5, 206.5, 44, 288.5, 288.5, 227, 16, 276, 198, 138, 136, 4, 277, 31, 142, 126, 164, 210, 11, 243, 230, 132.5, 132.5, 222, 139, 281, 1, 17, 125, 194, 9, 108, 238, 74, 241, 92, 105, 262.5, 262.5, 130.5, 130.5, 203, 199.5, 199.5, 296, 280, 180, 180, 180, 301, 290, 98, 168, 76, 218, 46, 234, 99, 298, 174, 175, 197, 77, 193, 201, 269, 237, 279, 231.5, 231.5, 228, 143.5, 143.5, 286, 211.5, 211.5, 111.5, 111.5, 233, 221, 68, 235, 151, 242, 253, 127, 102, 282, 236, 192, 182, 190, 204, 213.5, 213.5, 268, 29, 278, 219, 101, 137, 208, 264, 145, 84, 84, 84, 84, 84, 147, 147, 147, 239, 100, 191, 209, 140, 165, 255, 109, 90, 90, 90, 113, 195, 273, 284, 35, 149, 73, 283, 299, 187, 275, 216, 36, 120, 120, 120, 118, 300, 71, 55, 32, 43, 153, 153, 153, 267, 22, 5, 116, 169, 162, 162, 162, 244, 287, 257])
y=np.array(242, 79, 181, 114, 54, 40, 277, 90, 297, 119, 26, 135, 41, 61.5, 61.5, 28, 57.5, 57.5, 57.5, 57.5, 176, 64, 15, 67, 141, 69, 142, 185, 240, 173, 25, 34, 197, 7, 148, 299, 3, 204, 63, 294, 223.5, 223.5, 20, 265, 60, 194, 163, 110, 53, 136, 122, 42, 18, 233, 286, 51, 6, 12, 270, 187, 37, 256, 209, 48, 239, 33, 10, 111, 8, 49, 264, 230, 99, 98, 2, 326, 50, 96, 96, 96, 127.5, 127.5, 38, 45, 52, 218, 323.5, 323.5, 83, 47, 318.5, 318.5, 75, 241, 274.5, 274.5, 66, 231, 13.5, 13.5, 65, 77, 179, 179, 179, 184, 21, 257.5, 257.5, 27, 120, 320, 300, 236, 106.5, 106.5, 174, 321.5, 321.5, 287, 245, 195, 167, 271, 82, 129, 39, 80, 305, 273, 291.5, 291.5, 325, 267, 70, 312, 192, 24, 89, 157, 282, 72, 268.5, 268.5, 280, 280, 280, 19, 166, 30, 266, 193, 328, 162, 215, 23, 109, 164.5, 164.5, 198, 219.5, 219.5, 44, 315.5, 315.5, 243, 16, 302, 211, 145, 143, 4, 303, 199, 31, 149, 131.5, 131.5, 171, 225, 11, 261, 246, 139.5, 139.5, 238, 81, 146, 308, 1, 17, 130, 207, 9, 112, 201, 254, 118, 74, 259, 94, 108, 283.5, 283.5, 137.5, 137.5, 216, 212.5, 212.5, 327, 307, 189, 189, 189, 332, 317, 100, 175, 76, 234, 46, 250, 101, 329, 182, 183, 210, 78, 293, 206, 103, 214, 290, 262, 253, 306, 247.5, 247.5, 244, 150.5, 150.5, 313, 226.5, 226.5, 115.5, 115.5, 249, 237, 68, 251, 158, 260, 272, 133.5, 133.5, 105, 309, 252, 203, 191, 200, 217, 228.5, 228.5, 289, 29, 304, 235, 104, 144, 221, 285, 152, 86, 86, 86, 86, 86, 154, 154, 154, 255, 102, 202, 222, 147, 172, 276, 113, 92, 92, 92, 117, 208, 298, 311, 295.5, 295.5, 35, 156, 73, 310, 330, 196, 186, 301, 232, 205, 36, 125, 125, 125, 123, 331, 71, 55, 32, 43, [160, 160, 160, 288, 22, 5, 121, 177, 169, 169, 169, 263, 314, 278])
print scipy.stats.spearmanr(x,y)

print np.mean(np.square(x-y))
