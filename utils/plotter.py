import gc
import math
from numpy import *
import numpy.random
from sklearn.datasets import fetch_mldata
import sklearn.preprocessing
import numpy as np
import matplotlib as mpl
#mpl.use('Agg')
import matplotlib.pyplot as plt
from matplotlib import style
style.use("ggplot")
from sklearn import svm
from sklearn import svm
from sklearn.model_selection import GridSearchCV, cross_val_score
from sklearn.model_selection import PredefinedSplit
from sklearn.metrics import accuracy_score
import scipy
from statsmodels.sandbox.stats.multicomp import fdrcorrection0
import time
from matplotlib.ticker import FormatStrFormatter
import math


number_of_difference = [0.986, 1.146, 1.39, 1.97, 1.808, 2.472, 2.212, 2.61, 1.776, 2.762, 2.922, 3.264, 3.522, 4.004, 4.864, 5.038, 4.946, 5.918, 6.204, 6.168, 7.056, 5.018, 5.976, 5.814, 6.114, 6.96, 7.092, 7.952, 7.86, 8.594, 7.704, 8.2, 8.458, 9.15, 10.122, 10.73, 11.618, 12.016, 12.246, 12.434, 13.014, 13.51, 13.796, 14.698, 12.996, 13.8, 14.576, 15.114, 14.574, 14.916, 15.272, 15.894, 12.988, 13.946, 12.496, 13.216, 13.88, 14.838, 13.906, 14.304, 14.646, 15.506, 16.282, 17.268, 17.666, 18.526, 19.414, 19.938, 20.784, 19.796, 20.25, 19.318, 20.136, 20.702, 20.988, 21.386, 20.328, 21.258, 20.942, 21.284, 20.394, 20.05, 19.832, 20.398, 19.774, 19.066, 18.89, 18.336, 18.986, 19.594, 20.23, 20.362, 20.704, 19.506, 19.694, 20.54, 21.148, 22.092, 22.854, 23.504, 23.818, 22.83, 23.284, 23.836, 24.332, 24.688, 25.59, 25.05, 25.35, 25.86, 25.656, 25.774, 25.696, 25.338, 24.84, 25.406, 26.322, 26.762, 26.502, 27.082, 27.956, 28.34, 28.864, 28.394, 28.442, 29.344, 29.602, 29.58, 29.376, 30.264, 25.776, 25.88, 26.096, 26.116, 26.808, 27.64, 25.35, 26.014, 26.286, 27.118, 27.712, 28.082, 28.578, 26.68, 27.232, 27.532, 28.308, 28.482, 27.9, 28.228, 27.324, 27.554, 23.542, 20.034, 20.796, 18.8, 19.366, 18.784, 18.972, 19.468, 20.006, 20.432, 20.508, 20.528, 20.282, 19.644, 17.662, 18.452, 16.848, 16.518, 16.104, 3, -11]
percent_of_difference = [70.42857143, 1.341920375, 0.863354037, 0.97044335, 0.56641604, 0.700680272, 0.461988304, 0.484230056, 0.245847176, 0.381597126, 0.361723199, 0.373626374, 0.371597383, 0.400560224, 0.479873717, 0.459587666, 0.410320226, 0.489819566, 0.484839012, 0.445922499, 0.506024096, 0.295489342, 0.351033835, 0.31969647, 0.323731865, 0.365546218, 0.356238698, 0.396648045, 0.371807001, 0.401476222, 0.330700549, 0.344537815, 0.344633689, 0.368209256, 0.406865504, 0.424614167, 0.457725948, 0.462438424, 0.457725948, 0.451062904, 0.465018223, 0.474201474, 0.472401041, 0.501603986, 0.406074241, 0.428571429, 0.449543548, 0.459587666, 0.423342822, 0.425151066, 0.427451858, 0.440203844, 0.324602619, 0.348179957, 0.293995859, 0.308900524, 0.321892393, 0.343774617, 0.308378055, 0.31302521, 0.315959788, 0.333505399, 0.348516632, 0.369511256, 0.373220095, 0.390234655, 0.407977136, 0.414839166, 0.431060229, 0.39431121, 0.399014778, 0.36669071, 0.380901937, 0.388419828, 0.388580315, 0.391584575, 0.358695652, 0.374643121, 0.360708257, 0.362490633, 0.336501337, 0.323648103, 0.313956434, 0.320713185, 0.303161316, 0.28484776, 0.277345471, 0.263206247, 0.271174337, 0.278300145, 0.285855589, 0.284234624, 0.286378223, 0.261846592, 0.261519666, 0.272197191, 0.278806096, 0.291036518, 0.300133953, 0.307257896, 0.308595268, 0.288366806, 0.292086909, 0.297340452, 0.301631378, 0.303620622, 0.314334848, 0.30198915, 0.303048416, 0.307344901, 0.300618673, 0.298912161, 0.294327866, 0.285781958, 0.275510204, 0.280437998, 0.290279891, 0.293320765, 0.286514303, 0.291461288, 0.300459997, 0.302583814, 0.306620209, 0.296989729, 0.294558711, 0.303592121, 0.303928212, 0.300548669, 0.294868706, 0.303441084, 0.244963126, 0.243874859, 0.244106862, 0.242074821, 0.247781721, 0.255075674, 0.227048813, 0.232296894, 0.233209717, 0.240233164, 0.244615493, 0.246510648, 0.249759662, 0.227412206, 0.231234291, 0.232400311, 0.238499646, 0.238307201, 0.230388109, 0.231810268, 0.220932113, 0.221413304, 0.181850484, 0.149545407, 0.154958123, 0.137026239, 0.140706511, 0.13492702, 0.135487188, 0.138530726, 0.141892563, 0.144326401, 0.143923869, 0.143080183, 0.140148427, 0.134220667, 0.118268626, 0.123385134, 0.110731374, 0.107621741, 0.103966532, 0.017857143, -0.06043956]
z_score = [8.392173224, 1.248869976, 1.103223247, 1.39245045, 1.019127516, 1.325396199, 1.018051139, 1.132159636, 0.665450316, 1.033893791, 1.035356298, 1.112129549, 1.152106275, 1.275388473, 1.538586112, 1.532409398, 1.434663538, 1.714616851, 1.7466111, 1.670180533, 1.902945838, 1.226302973, 1.458617185, 1.372991905, 1.416827521, 1.606339394, 1.600723989, 1.78855536, 1.721597396, 1.870635325, 1.607448759, 1.69272698, 1.71938941, 1.848499937, 2.043714112, 2.149604901, 2.322362418, 2.373933004, 2.384302951, 2.384984328, 2.477433067, 2.54900488, 2.570949573, 2.734457347, 2.313497925, 2.449134821, 2.577903207, 2.654210936, 2.501479946, 2.536059077, 2.573078909, 2.663821147, 2.067800769, 2.219158165, 1.930268207, 2.034796021, 2.128686141, 2.274500984, 2.085472115, 2.130982833, 2.166391605, 2.290144399, 2.398983007, 2.543878697, 2.58590857, 2.70779193, 2.834242249, 2.896291133, 3.014359784, 2.813648408, 2.86265194, 2.6803566, 2.789039946, 2.855738197, 2.875990642, 2.914332584, 2.719392684, 2.84204942, 2.767888952, 2.797284004, 2.638190467, 2.565401026, 2.512924803, 2.575809518, 2.465731023, 2.346917058, 2.305090922, 2.212391286, 2.285086128, 2.351688582, 2.421769624, 2.422759188, 2.45221569, 2.275983531, 2.285497161, 2.38124226, 2.445385463, 2.553599606, 2.637547067, 2.706349979, 2.730290257, 2.583968003, 2.626312398, 2.681051952, 2.728278531, 2.757211807, 2.856228518, 2.769880785, 2.791300115, 2.83915308, 2.796816625, 2.795273111, 2.769555006, 2.709973927, 2.634548406, 2.688116697, 2.78374507, 2.821579105, 2.775070501, 2.829386973, 2.918719691, 2.949064775, 2.995988818, 2.924459062, 2.914926066, 3.005844069, 3.020699873, 3.002742092, 2.963959155, 3.05184096, 2.530577615, 2.530038872, 2.541783221, 2.532151477, 2.595543924, 2.674022659, 2.416073503, 2.47563613, 2.493429624, 2.570436332, 2.622028802, 2.649679842, 2.690534759, 2.480626282, 2.527129114, 2.547409564, 2.61673658, 2.623707194, 2.553251962, 2.576130929, 2.47436124, 2.487457823, 2.083725235, 1.743138587, 1.807834296, 1.616375787, 1.662411767, 1.60326402, 1.61460843, 1.653846759, 1.696764195, 1.729377778, 1.730173318, 1.725935674, 1.697895843, 1.635257698, 1.455513566, 1.519548912, 1.375533158, 1.342734907, 1.303092373, 0.233092423, -0.821142506]
x_axis = [1, 61, 115, 145, 228, 252, 342, 385, 516, 517, 577, 624, 677, 714, 724, 783, 861, 863, 914, 988, 996, 1213, 1216, 1299, 1349, 1360, 1422, 1432, 1510, 1529, 1664, 1700, 1753, 1775, 1777, 1805, 1813, 1856, 1911, 1969, 1999, 2035, 2086, 2093, 2286, 2300, 2316, 2349, 2459, 2506, 2552, 2579, 2858, 2861, 3036, 3056, 3080, 3083, 3221, 3264, 3311, 3321, 3337, 3338, 3381, 3391, 3399, 3433, 3444, 3586, 3625, 3763, 3776, 3807, 3858, 3901, 4048, 4053, 4147, 4194, 4329, 4425, 4512, 4543, 4659, 4781, 4865, 4976, 5001, 5029, 5055, 5117, 5164, 5321, 5379, 5390, 5418, 5422, 5439, 5464, 5513, 5655, 5694, 5726, 5762, 5808, 5815, 5925, 5975, 6010, 6096, 6159, 6236, 6333, 6440, 6471, 6477, 6517, 6607, 6637, 6646, 6690, 6724, 6829, 6897, 6904, 6957, 7030, 7116, 7124, 7516, 7580, 7636, 7706, 7728, 7740, 7975, 7999, 8051, 8063, 8092, 8137, 8173, 8380, 8412, 8462, 8478, 8537, 8650, 8698, 8834, 8889, 9247, 9569, 9586, 9800, 9831, 9944, 10002, 10038, 10071, 10112, 10178, 10248, 10337, 10454, 10667, 10682, 10868, 10963, 11064, 12000, 13000]
y_counter = [min(i,171) for i in range(1,174)]
plt.plot(x_axis[1:], y_counter[1:], label="number of significant values (n)")
plt.plot(x_axis[1:], number_of_difference[1:], label="actual-expected significant hypo. difference (n)")
plt.plot([11165, 11165], [-20,180], label="True hypotheses threshold")
plt.legend()
plt.savefig("c:\\users\hagai\\desktop\\figure_sum_n")
plt.cla()
plt.plot(x_axis[1:], percent_of_difference[1:], label="actual/expected proportion ratio")
plt.plot(x_axis[1:], z_score[1:], label="z_score")
plt.plot(x_axis[1:], [1.96 for i in range(len(x_axis[1:]))], label="z_score threshold (two-way)")
plt.plot([11165, 11165], [-0.5,3.5], label="True hypotheses threshold")
plt.legend()
plt.savefig("c:\\users\hagai\\desktop\\figure_sum_p")

